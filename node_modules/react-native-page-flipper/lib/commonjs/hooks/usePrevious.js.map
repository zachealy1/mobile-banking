{"version":3,"names":["usePrevious","value","ref","useRef","useEffect","current"],"sources":["usePrevious.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n// Hook\nconst usePrevious = <T>(value: T) => {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = useRef<T>();\n    // Store current value in ref\n    useEffect(() => {\n        ref.current = value;\n    }, [value]); // Only re-run if value changes\n    // Return previous value (happens before update in useEffect above)\n    return ref.current;\n};\nexport default usePrevious;\n"],"mappings":"gFAAA,4BAGA,GAAMA,YAAW,CAAG,QAAdA,YAAc,CAAIC,KAAJ,CAAiB,CAGjC,GAAMC,IAAG,CAAG,GAAAC,aAAA,GAAZ,CAEA,GAAAC,gBAAA,EAAU,UAAM,CACZF,GAAG,CAACG,OAAJ,CAAcJ,KAAd,CACH,CAFD,CAEG,CAACA,KAAD,CAFH,EAIA,MAAOC,IAAG,CAACG,OAAX,CACH,CAVD,C,aAWeL,W"}