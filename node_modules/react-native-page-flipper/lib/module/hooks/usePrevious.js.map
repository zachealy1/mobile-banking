{"version":3,"names":["useEffect","useRef","usePrevious","value","ref","current"],"sources":["usePrevious.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n// Hook\nconst usePrevious = <T>(value: T) => {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = useRef<T>();\n    // Store current value in ref\n    useEffect(() => {\n        ref.current = value;\n    }, [value]); // Only re-run if value changes\n    // Return previous value (happens before update in useEffect above)\n    return ref.current;\n};\nexport default usePrevious;\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC,C,CAEA;;AACA,MAAMC,WAAW,GAAOC,KAAJ,IAAiB;EACjC;EACA;EACA,MAAMC,GAAG,GAAGH,MAAM,EAAlB,CAHiC,CAIjC;;EACAD,SAAS,CAAC,MAAM;IACZI,GAAG,CAACC,OAAJ,GAAcF,KAAd;EACH,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CALiC,CAOpB;EACb;;EACA,OAAOC,GAAG,CAACC,OAAX;AACH,CAVD;;AAWA,eAAeH,WAAf"}