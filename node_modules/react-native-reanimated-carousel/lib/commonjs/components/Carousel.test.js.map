{"version":3,"sources":["Carousel.test.tsx"],"names":["jest","setTimeout","mockPan","fn","realPan","Gesture","Pan","gestureTestId","spyOn","mockImplementation","withTestId","describe","slideWidth","slideHeight","slideCount","beforeEach","mockClear","createMockData","length","Array","from","_","i","createDefaultProps","progressAnimVal","customProps","baseProps","width","height","data","defaultIndex","testID","onProgressChange","createCarousel","progress","Wrapper","React","forwardRef","ref","current","defaultRenderItem","item","index","flex","renderItem","defaultProps","value","swipeToLeftOnce","options","itemWidth","velocityX","state","State","BEGAN","translationX","ACTIVE","END","verifyInitialRender","getByTestId","expect","toBeTruthy","timeout","it","toBe","onSnapToItem","not","toHaveBeenCalled","toHaveBeenCalledWith","WrapperWithCustomProps","defaultScrollOffsetValue","refSetupCallback","getAllByTestId","_pan","pan","toBeNull","startedProgress","onScrollStart","endedProgress","onScrollEnd","offsetProgressVal","absoluteProgressVal","offsetProgress","absoluteProgress","containerWidth","containerHeight","nextSlide","testId","Carousel","baseOptions","vertical","style","next","props","onLayout","nativeEvent","layout","Promise","resolve"],"mappings":"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","sourcesContent":["import type { FC } from \"react\";\nimport React from \"react\";\nimport type { PanGesture } from \"react-native-gesture-handler\";\nimport { Gesture, State } from \"react-native-gesture-handler\";\nimport Animated, { useDerivedValue, useSharedValue } from \"react-native-reanimated\";\nimport type { ReactTestInstance } from \"react-test-renderer\";\n\nimport { act, render, waitFor } from \"@testing-library/react-native\";\nimport { fireGestureHandler, getByGestureTestId } from \"react-native-gesture-handler/jest-utils\";\n\nimport Carousel from \"./Carousel\";\n\nimport type { TCarouselProps } from \"../types\";\n\njest.setTimeout(1000 * 12);\n\nconst mockPan = jest.fn();\nconst realPan = Gesture.Pan();\nconst gestureTestId = \"rnrc-gesture-handler\";\n\njest.spyOn(Gesture, \"Pan\").mockImplementation(() => {\n  mockPan();\n  return realPan.withTestId(gestureTestId);\n});\n\ndescribe(\"Test the real swipe behavior of Carousel to ensure it's working as expected\", () => {\n  const slideWidth = 300;\n  const slideHeight = 200;\n  const slideCount = 4;\n\n  beforeEach(() => {\n    mockPan.mockClear();\n  });\n\n  // Helper function to create mock data\n  const createMockData = (length: number = slideCount) =>\n    Array.from({ length }, (_, i) => `Item ${i + 1}`);\n\n  // Helper function to create default props with correct typing\n  const createDefaultProps = (\n    progressAnimVal: Animated.SharedValue<number>,\n    customProps: Partial<TCarouselProps<string>> = {}\n  ) => {\n    const baseProps: Partial<TCarouselProps<string>> = {\n      width: slideWidth,\n      height: slideHeight,\n      data: createMockData(),\n      defaultIndex: 0,\n      testID: \"carousel-swipe-container\",\n      onProgressChange: progressAnimVal,\n    };\n\n    return {\n      ...baseProps,\n      ...customProps,\n    } as TCarouselProps<string>;\n  };\n\n  // Helper function to create test wrapper\n  const createCarousel = (progress: { current: number }) => {\n    const Wrapper: FC<Partial<TCarouselProps<string>>> = React.forwardRef((customProps, ref) => {\n      const progressAnimVal = useSharedValue(progress.current);\n      const defaultRenderItem = ({\n        item,\n        index,\n      }: {\n        item: string;\n        index: number;\n      }) => (\n        <Animated.View\n          testID={`carousel-item-${index}`}\n          style={{ width: slideWidth, height: slideHeight, flex: 1 }}\n        >\n          {item}\n        </Animated.View>\n      );\n      const { renderItem = defaultRenderItem, ...defaultProps } = createDefaultProps(\n        progressAnimVal,\n        customProps\n      );\n\n      useDerivedValue(() => {\n        progress.current = progressAnimVal.value;\n      }, [progressAnimVal]);\n\n      return <Carousel {...defaultProps} renderItem={renderItem} ref={ref} />;\n    });\n\n    return Wrapper;\n  };\n\n  // Helper function to simulate swipe\n  const swipeToLeftOnce = (\n    options: {\n      itemWidth?: number;\n      velocityX?: number;\n    } = {}\n  ) => {\n    const { itemWidth = slideWidth, velocityX = -slideWidth } = options;\n    fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n      { state: State.BEGAN, translationX: 0, velocityX },\n      { state: State.ACTIVE, translationX: -itemWidth * 0.25, velocityX },\n      { state: State.ACTIVE, translationX: -itemWidth * 0.5, velocityX },\n      { state: State.ACTIVE, translationX: -itemWidth * 0.75, velocityX },\n      { state: State.END, translationX: -itemWidth, velocityX },\n    ]);\n  };\n\n  // Helper function to verify initial render\n  const verifyInitialRender = async (\n    getByTestId: (testID: string | RegExp) => ReactTestInstance\n  ) => {\n    await waitFor(\n      () => {\n        const item = getByTestId(\"carousel-item-0\");\n        expect(item).toBeTruthy();\n      },\n      { timeout: 1000 * 3 }\n    );\n  };\n\n  it(\"`data` prop: should render correctly\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper data={createMockData(6)} />);\n    await verifyInitialRender(getByTestId);\n\n    expect(getByTestId(\"carousel-item-0\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-1\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-2\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-3\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-4\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-5\")).toBeTruthy();\n  });\n\n  it(\"`renderItem` prop: should render items correctly\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(\n      <Wrapper\n        renderItem={({ item, index }) => (\n          <Animated.Text testID={`item-${index}`}>{item}</Animated.Text>\n        )}\n      />\n    );\n\n    await waitFor(() => expect(getByTestId(\"item-0\")).toBeTruthy());\n  });\n\n  it(\"should swipe to the left\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper />);\n    await verifyInitialRender(getByTestId);\n\n    // Test swipe sequence\n    for (let i = 1; i <= slideCount; i++) {\n      swipeToLeftOnce();\n      await waitFor(() => expect(progress.current).toBe(i % slideCount));\n    }\n  });\n\n  it(\"`loop` prop: should swipe back to the first item when loop is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    {\n      const { getByTestId } = render(<Wrapper loop />);\n      await verifyInitialRender(getByTestId);\n\n      // Test swipe sequence\n      for (let i = 1; i <= slideCount; i++) {\n        swipeToLeftOnce();\n        await waitFor(() => expect(progress.current).toBe(i % slideCount));\n      }\n    }\n\n    {\n      const { getByTestId } = render(<Wrapper loop={false} />);\n      await verifyInitialRender(getByTestId);\n\n      fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n        { state: State.BEGAN, translationX: 0 },\n        { state: State.ACTIVE, translationX: slideWidth * 0.25 },\n        { state: State.END, translationX: slideWidth * 0.5 },\n      ]);\n\n      // Because the loop is false, so the the carousel will swipe back to the first item\n      await waitFor(() => expect(progress.current).toBe(0));\n    }\n  });\n\n  it(\"`onSnapToItem` prop: should call the onSnapToItem callback\", async () => {\n    const progress = { current: 0 };\n    const onSnapToItem = jest.fn();\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper onSnapToItem={onSnapToItem} />);\n    await verifyInitialRender(getByTestId);\n    expect(onSnapToItem).not.toHaveBeenCalled();\n\n    swipeToLeftOnce();\n    await waitFor(() => expect(onSnapToItem).toHaveBeenCalledWith(1));\n\n    swipeToLeftOnce();\n    await waitFor(() => expect(onSnapToItem).toHaveBeenCalledWith(2));\n\n    swipeToLeftOnce();\n    await waitFor(() => expect(onSnapToItem).toHaveBeenCalledWith(3));\n  });\n\n  it(\"`autoPlay` prop: should swipe automatically when autoPlay is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper autoPlay autoPlayInterval={300} />);\n    await verifyInitialRender(getByTestId);\n\n    await waitFor(() => expect(progress.current).toBe(1));\n    await waitFor(() => expect(progress.current).toBe(2));\n    await waitFor(() => expect(progress.current).toBe(3));\n    await waitFor(() => expect(progress.current).toBe(0));\n  });\n\n  it(\"`autoPlayReverse` prop: should swipe automatically in reverse when autoPlayReverse is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper autoPlay autoPlayReverse />);\n    await verifyInitialRender(getByTestId);\n\n    await waitFor(() => expect(progress.current).toBe(3));\n    await waitFor(() => expect(progress.current).toBe(2));\n    await waitFor(() => expect(progress.current).toBe(1));\n    await waitFor(() => expect(progress.current).toBe(0));\n  });\n\n  it(\"`defaultIndex` prop: should render the correct item with the defaultIndex props\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper defaultIndex={2} />);\n    await verifyInitialRender(getByTestId);\n\n    await waitFor(() => expect(progress.current).toBe(2));\n  });\n\n  it(\"`defaultScrollOffsetValue` prop: should render the correct progress value with the defaultScrollOffsetValue props\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const WrapperWithCustomProps = () => {\n      const defaultScrollOffsetValue = useSharedValue(-slideWidth);\n\n      return <Wrapper defaultScrollOffsetValue={defaultScrollOffsetValue} />;\n    };\n\n    render(<WrapperWithCustomProps />);\n\n    await waitFor(() => expect(progress.current).toBe(1));\n  });\n\n  it(\"`ref` prop: should handle the ref props\", async () => {\n    const Wrapper = createCarousel({ current: 0 });\n    const fn = jest.fn();\n    const WrapperWithCustomProps: FC<{\n      refSetupCallback: (ref: boolean) => void;\n    }> = ({ refSetupCallback }) => {\n      return (\n        <Wrapper\n          ref={(ref) => {\n            refSetupCallback(!!ref);\n          }}\n        />\n      );\n    };\n\n    render(<WrapperWithCustomProps refSetupCallback={fn} />);\n\n    await waitFor(() => expect(fn).toHaveBeenCalledWith(true));\n  });\n\n  it(\"`autoFillData` prop: should auto fill data array to allow loop playback when the loop props is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    {\n      const { getAllByTestId } = render(<Wrapper autoFillData data={createMockData(1)} />);\n      await waitFor(() => {\n        expect(getAllByTestId(\"carousel-item-0\").length).toBe(3);\n      });\n    }\n\n    {\n      const { getAllByTestId } = render(<Wrapper autoFillData={false} data={createMockData(1)} />);\n      await waitFor(() => {\n        expect(getAllByTestId(\"carousel-item-0\").length).toBe(1);\n      });\n    }\n  });\n\n  it(\"`pagingEnabled` prop: should swipe to the next item when pagingEnabled is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    {\n      const { getByTestId } = render(<Wrapper pagingEnabled={false} />);\n      await verifyInitialRender(getByTestId);\n\n      fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n        { state: State.BEGAN, translationX: 0, velocityX: -5 },\n        { state: State.ACTIVE, translationX: -slideWidth * 0.15, velocityX: -5 },\n        { state: State.END, translationX: -slideWidth * 0.25, velocityX: -5 },\n      ]);\n\n      await waitFor(() => expect(progress.current).toBe(0));\n    }\n\n    {\n      const { getByTestId } = render(<Wrapper pagingEnabled />);\n      await verifyInitialRender(getByTestId);\n\n      fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n        { state: State.BEGAN, translationX: 0, velocityX: -1000 },\n        { state: State.ACTIVE, translationX: -slideWidth * 0.15, velocityX: -1000 },\n        { state: State.END, translationX: -slideWidth * 0.25, velocityX: -1000 },\n      ]);\n\n      await waitFor(() => expect(progress.current).toBe(1));\n    }\n  });\n\n  it(\"`onConfigurePanGesture` prop: should call the onConfigurePanGesture callback\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    let _pan: PanGesture | null = null;\n    render(\n      <Wrapper\n        onConfigurePanGesture={(pan) => {\n          _pan = pan;\n          return pan;\n        }}\n      />\n    );\n\n    const { getByTestId } = render(<Wrapper pagingEnabled={false} />);\n    await verifyInitialRender(getByTestId);\n    expect(_pan).not.toBeNull();\n  });\n\n  it(\"`onScrollStart` prop: should call the onScrollStart callback\", async () => {\n    const progress = { current: 0 };\n    let startedProgress: number | undefined;\n    const onScrollStart = () => {\n      if (typeof startedProgress === \"number\") return;\n\n      startedProgress = progress.current;\n    };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper onScrollStart={onScrollStart} />);\n    await verifyInitialRender(getByTestId);\n\n    fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n      { state: State.BEGAN, translationX: 0, velocityX: 1000 },\n      { state: State.ACTIVE, translationX: slideWidth / 2, velocityX: 1000 },\n      { state: State.END, translationX: slideWidth, velocityX: 1000 },\n    ]);\n\n    await waitFor(() => {\n      expect(startedProgress).toBe(0);\n    });\n  });\n\n  it(\"`onScrollEnd` prop: should call the onScrollEnd callback\", async () => {\n    const progress = { current: 0 };\n    let endedProgress: number | undefined;\n    const onScrollEnd = jest.fn(() => {\n      if (typeof endedProgress === \"number\") return;\n\n      endedProgress = progress.current;\n    });\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper onScrollEnd={onScrollEnd} />);\n    await verifyInitialRender(getByTestId);\n\n    fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n      { state: State.BEGAN, translationX: 0, velocityX: 1000 },\n      { state: State.ACTIVE, translationX: slideWidth / 2, velocityX: 1000 },\n      { state: State.END, translationX: slideWidth, velocityX: 1000 },\n    ]);\n\n    await waitFor(() => {\n      expect(endedProgress).toBe(3);\n      expect(onScrollEnd).toHaveBeenCalledWith(3);\n    });\n  });\n\n  it(\"`onProgressChange` prop: should call the onProgressChange callback\", async () => {\n    const offsetProgressVal = { current: 0 };\n    const absoluteProgressVal = { current: 0 };\n    const onProgressChange = jest.fn((offsetProgress, absoluteProgress) => {\n      offsetProgressVal.current = offsetProgress;\n      absoluteProgressVal.current = absoluteProgress;\n    });\n    const Wrapper = createCarousel(offsetProgressVal);\n    const { getByTestId } = render(\n      <Wrapper onProgressChange={onProgressChange} defaultIndex={0} />\n    );\n    await verifyInitialRender(getByTestId);\n\n    await waitFor(() => {\n      expect(offsetProgressVal.current).toBe(0);\n      expect(absoluteProgressVal.current).toBe(0);\n    });\n\n    fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n      { state: State.BEGAN, translationX: 0, velocityX: -1000 },\n      { state: State.ACTIVE, translationX: -slideWidth / 2, velocityX: -1000 },\n      { state: State.END, translationX: -slideWidth, velocityX: -1000 },\n    ]);\n\n    await waitFor(() => {\n      expect(offsetProgressVal.current).toBe(-slideWidth);\n      expect(absoluteProgressVal.current).toBe(1);\n    });\n  });\n\n  it(\"`fixedDirection` prop: should swipe to the correct direction when fixedDirection is positive\", async () => {\n    {\n      const progress = { current: 0 };\n      const Wrapper = createCarousel(progress);\n      const { getByTestId } = render(<Wrapper fixedDirection=\"positive\" />);\n      await verifyInitialRender(getByTestId);\n\n      swipeToLeftOnce({ velocityX: slideWidth });\n      await waitFor(() => {\n        expect(progress.current).toBe(3);\n      });\n    }\n\n    {\n      const progress = { current: 0 };\n      const Wrapper = createCarousel(progress);\n      const { getByTestId } = render(<Wrapper fixedDirection=\"negative\" />);\n      await verifyInitialRender(getByTestId);\n\n      swipeToLeftOnce({ velocityX: -slideWidth });\n      await waitFor(() => expect(progress.current).toBe(1));\n    }\n  });\n\n  it(\"`overscrollEnabled` prop: should respect overscrollEnabled=false and prevent scrolling beyond bounds\", async () => {\n    const containerWidth = slideWidth;\n    const containerHeight = containerWidth / 2;\n    const itemWidth = containerWidth / 4;\n\n    let nextSlide: (() => void) | undefined;\n    const testId = \"CarouselAnimatedView\";\n    const progress = { current: 0 };\n    const Carousel = createCarousel(progress);\n    const baseOptions = {\n      vertical: false,\n      width: itemWidth,\n      height: containerHeight,\n      style: {\n        width: containerWidth,\n      },\n      testID: testId,\n    };\n\n    const { getByTestId } = render(\n      <Carousel\n        ref={(ref) => {\n          if (ref) {\n            nextSlide = ref.next;\n          }\n        }}\n        {...baseOptions}\n        loop={false}\n        overscrollEnabled={false}\n        data={createMockData(6)}\n        pagingEnabled={false}\n      />\n    );\n\n    await act(() => {\n      getByTestId(testId).props.onLayout({\n        nativeEvent: {\n          layout: {\n            width: containerWidth,\n            height: containerHeight,\n          },\n        },\n      });\n    });\n\n    await verifyInitialRender(getByTestId);\n\n    await new Promise((resolve) => setTimeout(resolve, 3000));\n\n    // The test logic is that the first screen has four elements\n    await waitFor(() => {\n      expect(progress.current).toBe(0);\n    });\n\n    // After swiping left twice, the last element is close to the right side of the container\n    nextSlide?.();\n    await waitFor(() => {\n      expect(progress.current).toBe(1);\n    });\n\n    nextSlide?.();\n    await waitFor(() => {\n      expect(progress.current).toBe(2);\n    });\n\n    // At this point, swiping left again should stay on the last element, meaning this swipe is invalid\n    nextSlide?.();\n    await waitFor(() => {\n      expect(progress.current).toBe(2);\n    });\n  });\n});\n"]}