{"version":3,"sources":["index.tsx"],"names":["Basic","props","activeDotStyle","dotStyle","progress","horizontal","data","size","containerStyle","renderItem","onPress","width","height","Error","justifyContent","alignSelf","flexDirection","map","item","index","length"],"mappings":";;;;;;;AAAA;;AAGA;;AAEA;;;;AAcO,MAAMA,KAAK,GAAkBC,KAAf,IAAwC;AAC3D,QAAM;AACJC,IAAAA,cADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,UAAU,GAAG,IAJT;AAKJC,IAAAA,IALI;AAMJC,IAAAA,IANI;AAOJC,IAAAA,cAPI;AAQJC,IAAAA,UARI;AASJC,IAAAA;AATI,MAUFT,KAVJ;AAYA,MACE,OAAOM,IAAP,KAAgB,QAAhB,IACA,QAAOJ,QAAP,aAAOA,QAAP,uBAAOA,QAAQ,CAAEQ,KAAjB,MAA2B,QAD3B,IAEA,QAAOR,QAAP,aAAOA,QAAP,uBAAOA,QAAQ,CAAES,MAAjB,MAA4B,QAH9B,EAKE,MAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AAEF,sBACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACL;AACEC,MAAAA,cAAc,EAAE,eADlB;AAEEC,MAAAA,SAAS,EAAE;AAFb,KADK,EAKLV,UAAU,GACN;AACEW,MAAAA,aAAa,EAAE;AADjB,KADM,GAIN;AACEA,MAAAA,aAAa,EAAE;AADjB,KATC,EAYLR,cAZK;AADT,KAgBGF,IAAI,CAACW,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,wBACE,6BAAC,8BAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,KAAK,EAAEA,KAFT;AAGE,MAAA,IAAI,EAAEZ,IAHR;AAIE,MAAA,KAAK,EAAED,IAAI,CAACc,MAJd;AAKE,MAAA,QAAQ,EAAEjB,QALZ;AAME,MAAA,SAAS,EAAEC,QANb;AAOE,MAAA,UAAU,EAAE,CAACC,UAPf;AAQE,MAAA,cAAc,EAAEH,cARlB;AASE,MAAA,OAAO,EAAE,MAAMQ,OAAN,aAAMA,OAAN,uBAAMA,OAAO,CAAGS,KAAH;AATxB,OAWGV,UAXH,aAWGA,UAXH,uBAWGA,UAAU,CAAGS,IAAH,EAASC,KAAT,CAXb,CADF;AAeD,GAhBA,CAhBH,CADF;AAoCD,CAxDM","sourcesContent":["import { type StyleProp, View, type ViewStyle } from \"react-native\";\nimport type { SharedValue } from \"react-native-reanimated\";\n\nimport React from \"react\";\nimport type { DotStyle } from \"./PaginationItem\";\nimport { PaginationItem } from \"./PaginationItem\";\n\nexport interface BasicProps<T> {\n  progress: SharedValue<number>;\n  horizontal?: boolean;\n  data: Array<T>;\n  renderItem?: (item: T, index: number) => React.ReactNode;\n  containerStyle?: StyleProp<ViewStyle>;\n  dotStyle?: DotStyle;\n  activeDotStyle?: DotStyle;\n  size?: number;\n  onPress?: (index: number) => void;\n}\n\nexport const Basic = <T extends {}>(props: BasicProps<T>) => {\n  const {\n    activeDotStyle,\n    dotStyle,\n    progress,\n    horizontal = true,\n    data,\n    size,\n    containerStyle,\n    renderItem,\n    onPress,\n  } = props;\n\n  if (\n    typeof size === \"string\" ||\n    typeof dotStyle?.width === \"string\" ||\n    typeof dotStyle?.height === \"string\"\n  )\n    throw new Error(\"size/width/height must be a number\");\n\n  return (\n    <View\n      style={[\n        {\n          justifyContent: \"space-between\",\n          alignSelf: \"center\",\n        },\n        horizontal\n          ? {\n              flexDirection: \"row\",\n            }\n          : {\n              flexDirection: \"column\",\n            },\n        containerStyle,\n      ]}\n    >\n      {data.map((item, index) => {\n        return (\n          <PaginationItem\n            key={index}\n            index={index}\n            size={size}\n            count={data.length}\n            dotStyle={dotStyle}\n            animValue={progress}\n            horizontal={!horizontal}\n            activeDotStyle={activeDotStyle}\n            onPress={() => onPress?.(index)}\n          >\n            {renderItem?.(item, index)}\n          </PaginationItem>\n        );\n      })}\n    </View>\n  );\n};\n"]}