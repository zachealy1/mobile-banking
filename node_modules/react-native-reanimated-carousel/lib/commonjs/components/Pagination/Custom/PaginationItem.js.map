{"version":3,"sources":["PaginationItem.tsx"],"names":["PaginationItem","props","defaultDotSize","animValue","dotStyle","activeDotStyle","index","count","size","horizontal","children","customReanimatedStyle","onPress","customReanimatedStyleRef","handleCustomAnimation","progress","value","animStyle","width","height","borderRadius","backgroundColor","restDotStyle","activeWidth","activeHeight","activeBorderRadius","activeBackgroundColor","restActiveDotStyle","val","Math","abs","inputRange","restStyle","Extrapolation","CLAMP","transform","overflow","rotateZ"],"mappings":"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","sourcesContent":["import type { PropsWithChildren } from \"react\";\nimport React from \"react\";\nimport { TouchableWithoutFeedback } from \"react-native\";\nimport type { ViewStyle } from \"react-native\";\nimport type { SharedValue } from \"react-native-reanimated\";\nimport Animated, {\n  Extrapolation,\n  interpolate,\n  interpolateColor,\n  useAnimatedStyle,\n  runOnJS,\n  useSharedValue,\n  useDerivedValue,\n} from \"react-native-reanimated\";\n\nimport type { DefaultStyle } from \"react-native-reanimated/lib/typescript/reanimated2/hook/commonTypes\";\n\nexport type DotStyle = Omit<ViewStyle, \"width\" | \"height\" | \"backgroundColor\" | \"borderRadius\"> & {\n  width?: number;\n  height?: number;\n  backgroundColor?: string;\n  borderRadius?: number;\n};\n\nexport const PaginationItem: React.FC<\n  PropsWithChildren<{\n    index: number;\n    count: number;\n    size?: number;\n    animValue: SharedValue<number>;\n    horizontal?: boolean;\n    dotStyle?: DotStyle;\n    activeDotStyle?: DotStyle;\n    onPress: () => void;\n    customReanimatedStyle?: (progress: number, index: number, length: number) => DefaultStyle;\n  }>\n> = (props) => {\n  const defaultDotSize = 10;\n  const {\n    animValue,\n    dotStyle,\n    activeDotStyle,\n    index,\n    count,\n    size,\n    horizontal,\n    children,\n    customReanimatedStyle,\n    onPress,\n  } = props;\n  const customReanimatedStyleRef = useSharedValue<DefaultStyle>({});\n  const handleCustomAnimation = (progress: number) => {\n    customReanimatedStyleRef.value = customReanimatedStyle?.(progress, index, count) ?? {};\n  };\n\n  useDerivedValue(() => {\n    runOnJS(handleCustomAnimation)(animValue?.value);\n  });\n\n  const animStyle = useAnimatedStyle((): DefaultStyle => {\n    const {\n      width = size || defaultDotSize,\n      height = size || defaultDotSize,\n      borderRadius,\n      backgroundColor = \"#FFF\",\n      ...restDotStyle\n    } = dotStyle ?? {};\n    const {\n      width: activeWidth = width,\n      height: activeHeight = height,\n      borderRadius: activeBorderRadius,\n      backgroundColor: activeBackgroundColor = \"#000\",\n      ...restActiveDotStyle\n    } = activeDotStyle ?? {};\n    let val = Math.abs(animValue?.value - index);\n    if (index === 0 && animValue?.value > count - 1) val = Math.abs(animValue?.value - count);\n\n    const inputRange = [0, 1, 2];\n    const restStyle = (val === 0 ? restActiveDotStyle : restDotStyle) ?? {};\n\n    return {\n      width: interpolate(val, inputRange, [activeWidth, width, width], Extrapolation.CLAMP),\n      height: interpolate(val, inputRange, [activeHeight, height, height], Extrapolation.CLAMP),\n      borderRadius: interpolate(\n        val,\n        inputRange,\n        [activeBorderRadius ?? borderRadius ?? 0, borderRadius ?? 0, borderRadius ?? 0],\n        Extrapolation.CLAMP\n      ),\n      backgroundColor: interpolateColor(val, inputRange, [\n        activeBackgroundColor,\n        backgroundColor,\n        backgroundColor,\n      ]),\n      ...restStyle,\n      ...(customReanimatedStyleRef.value ?? {}),\n      transform: [\n        ...(restStyle?.transform ?? []),\n        ...(customReanimatedStyleRef.value?.transform ?? []),\n      ] as DefaultStyle[\"transform\"],\n    };\n  }, [animValue, index, count, horizontal, dotStyle, activeDotStyle, customReanimatedStyle]);\n\n  return (\n    <TouchableWithoutFeedback onPress={onPress}>\n      <Animated.View\n        style={[\n          {\n            overflow: \"hidden\",\n            transform: [\n              {\n                rotateZ: horizontal ? \"90deg\" : \"0deg\",\n              },\n            ],\n          },\n          dotStyle,\n          animStyle,\n        ]}\n      >\n        {children}\n      </Animated.View>\n    </TouchableWithoutFeedback>\n  );\n};\n"]}