{"version":3,"sources":["useCarouselController.tsx"],"names":["useCarouselController","options","ref","size","loop","dataLength","handlerOffset","withAnimation","defaultIndex","duration","autoFillData","fixedDirection","globalState","props","overscrollEnabled","layout","containerSize","dataInfo","React","useMemo","length","disable","originalLength","index","sharedIndex","sharedPreIndex","currentFixedPage","useCallback","Math","round","value","fixed","abs","setSharedIndex","newSharedIndex","current","handlerOffsetValue","toInt","isPositive","i","newSharedIndexValue","rawDataLength","getCurrentIndex","realIndex","canSliding","onScrollEnd","onScrollStart","scrollWithTiming","toValue","onFinished","callback","isFinished","defaultWithAnimation","type","config","easing","Easing","easeOutQuart","next","opts","count","animated","visibleContentWidth","width","nextPage","prev","prevPage","to","direction","offset","totalSize","isCloseToNextLoop","finalOffset","floor","scrollTo","n","useImperativeHandle","getSharedIndex"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { SharedValue, runOnJS, useAnimatedReaction, useSharedValue } from \"react-native-reanimated\";\n\nimport { Easing } from \"../constants\";\nimport { useGlobalState } from \"../store\";\nimport type {\n  ICarouselInstance,\n  TCarouselActionOptions,\n  TCarouselProps,\n  WithTimingAnimation,\n} from \"../types\";\nimport {\n  computedRealIndexWithAutoFillData,\n  convertToSharedIndex,\n} from \"../utils/computed-with-auto-fill-data\";\nimport { dealWithAnimation } from \"../utils/deal-with-animation\";\nimport { handlerOffsetDirection } from \"../utils/handleroffset-direction\";\nimport { round } from \"../utils/log\";\n\ninterface IOpts {\n  ref: React.ForwardedRef<ICarouselInstance>;\n  loop: boolean;\n  size: number;\n  dataLength: number;\n  handlerOffset: SharedValue<number>;\n  autoFillData: TCarouselProps[\"autoFillData\"];\n  withAnimation?: TCarouselProps[\"withAnimation\"];\n  fixedDirection?: TCarouselProps[\"fixedDirection\"];\n  duration?: number;\n  defaultIndex?: number;\n  onScrollStart?: () => void;\n  onScrollEnd?: () => void;\n}\n\nexport interface ICarouselController {\n  getSharedIndex: () => number;\n  prev: (opts?: TCarouselActionOptions) => void;\n  next: (opts?: TCarouselActionOptions) => void;\n  getCurrentIndex: () => number;\n  scrollTo: (opts?: TCarouselActionOptions) => void;\n  index: SharedValue<number>;\n}\n\nexport function useCarouselController(options: IOpts): ICarouselController {\n  const {\n    ref,\n    size,\n    loop,\n    dataLength,\n    handlerOffset,\n    withAnimation,\n    defaultIndex = 0,\n    duration,\n    autoFillData,\n    fixedDirection,\n  } = options;\n\n  const globalState = useGlobalState();\n\n  const {\n    props: { overscrollEnabled },\n    layout: { containerSize },\n  } = globalState;\n\n  const dataInfo = React.useMemo(\n    () => ({\n      length: dataLength,\n      disable: !dataLength,\n      originalLength: dataLength,\n    }),\n    [dataLength]\n  );\n\n  const index = useSharedValue<number>(defaultIndex);\n  // The Index displayed to the user\n  const sharedIndex = useRef<number>(defaultIndex);\n  const sharedPreIndex = useRef<number>(defaultIndex);\n\n  const currentFixedPage = React.useCallback(() => {\n    if (loop) return -Math.round(handlerOffset.value / size);\n\n    const fixed = (handlerOffset.value / size) % dataInfo.length;\n    return Math.round(\n      handlerOffset.value <= 0 ? Math.abs(fixed) : Math.abs(fixed > 0 ? dataInfo.length - fixed : 0)\n    );\n  }, [handlerOffset, dataInfo, size, loop]);\n\n  function setSharedIndex(newSharedIndex: number) {\n    sharedIndex.current = newSharedIndex;\n  }\n\n  useAnimatedReaction(\n    () => {\n      const handlerOffsetValue = handlerOffset.value;\n      const toInt = round(handlerOffsetValue / size) % dataInfo.length;\n      const isPositive = handlerOffsetValue <= 0;\n      const i = isPositive ? Math.abs(toInt) : Math.abs(toInt > 0 ? dataInfo.length - toInt : 0);\n\n      const newSharedIndexValue = convertToSharedIndex({\n        loop,\n        rawDataLength: dataInfo.originalLength,\n        autoFillData: autoFillData!,\n        index: i,\n      });\n\n      return {\n        i,\n        newSharedIndexValue,\n      };\n    },\n    ({ i, newSharedIndexValue }) => {\n      index.value = i;\n      runOnJS(setSharedIndex)(newSharedIndexValue);\n    },\n    [sharedPreIndex, sharedIndex, size, dataInfo, index, loop, autoFillData, handlerOffset]\n  );\n\n  const getCurrentIndex = React.useCallback(() => {\n    const realIndex = computedRealIndexWithAutoFillData({\n      index: index.value,\n      dataLength: dataInfo.originalLength,\n      loop,\n      autoFillData: autoFillData!,\n    });\n\n    return realIndex;\n  }, [index, autoFillData, dataInfo, loop]);\n\n  const canSliding = React.useCallback(() => {\n    return !dataInfo.disable;\n  }, [dataInfo]);\n\n  const onScrollEnd = React.useCallback(() => {\n    options.onScrollEnd?.();\n  }, [options]);\n\n  const onScrollStart = React.useCallback(() => {\n    options.onScrollStart?.();\n  }, [options]);\n\n  const scrollWithTiming = React.useCallback(\n    (toValue: number, onFinished?: () => void) => {\n      \"worklet\";\n      const callback = (isFinished: boolean) => {\n        \"worklet\";\n        if (isFinished) {\n          runOnJS(onScrollEnd)();\n          onFinished && runOnJS(onFinished)();\n        }\n      };\n\n      const defaultWithAnimation: WithTimingAnimation = {\n        type: \"timing\",\n        config: { duration, easing: Easing.easeOutQuart },\n      };\n\n      return dealWithAnimation(withAnimation ?? defaultWithAnimation)(toValue, callback);\n    },\n    [duration, withAnimation, onScrollEnd]\n  );\n\n  const next = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      \"worklet\";\n      const { count = 1, animated = true, onFinished } = opts;\n      if (!canSliding()) return;\n\n      if (!loop && index.value >= dataInfo.length - 1) return;\n\n      /* \n      [Overscroll Protection Logic]\n      \n      This section handles the overscroll protection when overscrollEnabled is false.\n      It prevents scrolling beyond the visible content area.\n\n      Example scenario:\n      - Container width: 300px\n      - Item width: 75px (4 items per view)\n      - Total items: 6\n      \n      Initial state (index = 0):\n      [0][1][2][3] | [4][5]\n      visible      | remaining\n\n      After 2 slides (index = 2):\n      [0][1] | [2][3][4][5]\n      hidden | visible\n\n      The visibleContentWidth calculation:\n      - At index 2, remaining items = 4 (items 2,3,4,5)\n      - visibleContentWidth = 4 * 75px = 300px\n      \n      If we try to slide again:\n      - New visibleContentWidth would be: 2 * 75px = 150px (only items 4,5 remain)\n      - Since 150px < container width (300px), the slide is prevented\n      \n      This ensures we don't scroll beyond the last set of fully visible items,\n      maintaining a clean UX without partial item visibility at the edges.\n      */\n      const visibleContentWidth = (dataInfo.length - index.value) * size;\n      if (!overscrollEnabled && !(visibleContentWidth > containerSize.value.width)) {\n        return;\n      }\n\n      onScrollStart?.();\n\n      const nextPage = currentFixedPage() + count;\n      index.value = nextPage;\n\n      if (animated) {\n        handlerOffset.value = scrollWithTiming(-nextPage * size, onFinished) as any;\n      } else {\n        handlerOffset.value = -nextPage * size;\n        onFinished?.();\n      }\n    },\n    [\n      canSliding,\n      loop,\n      index,\n      dataInfo,\n      onScrollStart,\n      handlerOffset,\n      size,\n      scrollWithTiming,\n      currentFixedPage,\n    ]\n  );\n\n  const prev = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      const { count = 1, animated = true, onFinished } = opts;\n      if (!canSliding()) return;\n\n      if (!loop && index.value <= 0) return;\n\n      onScrollStart?.();\n\n      const prevPage = currentFixedPage() - count;\n      index.value = prevPage;\n\n      if (animated) {\n        handlerOffset.value = scrollWithTiming(-prevPage * size, onFinished);\n      } else {\n        handlerOffset.value = -prevPage * size;\n        onFinished?.();\n      }\n    },\n    [\n      canSliding,\n      loop,\n      index,\n      onScrollStart,\n      handlerOffset,\n      size,\n      scrollWithTiming,\n      currentFixedPage,\n    ]\n  );\n\n  const to = React.useCallback(\n    (opts: { i: number; animated: boolean; onFinished?: () => void }) => {\n      const { i, animated = false, onFinished } = opts;\n\n      if (i === index.value) return;\n\n      if (!canSliding()) return;\n\n      onScrollStart?.();\n      // direction -> 1 | -1\n      const direction = handlerOffsetDirection(handlerOffset, fixedDirection);\n\n      // target offset\n      const offset = i * size * direction;\n      // page width size * page count\n      const totalSize = dataInfo.length * size;\n\n      let isCloseToNextLoop = false;\n\n      if (loop) {\n        isCloseToNextLoop = Math.abs(handlerOffset.value % totalSize) / totalSize >= 0.5;\n      }\n\n      const finalOffset =\n        (Math.floor(Math.abs(handlerOffset.value / totalSize)) + (isCloseToNextLoop ? 1 : 0)) *\n          totalSize *\n          direction +\n        offset;\n\n      if (animated) {\n        index.value = i;\n        handlerOffset.value = scrollWithTiming(finalOffset, onFinished);\n      } else {\n        handlerOffset.value = finalOffset;\n        index.value = i;\n        onFinished?.();\n      }\n    },\n    [\n      size,\n      loop,\n      index,\n      fixedDirection,\n      handlerOffset,\n      dataInfo.length,\n      canSliding,\n      onScrollStart,\n      scrollWithTiming,\n    ]\n  );\n\n  const scrollTo = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      const { index: i, count, animated = false, onFinished } = opts;\n\n      if (typeof i === \"number\" && i > -1) {\n        to({ i, animated, onFinished });\n        return;\n      }\n\n      if (!count) return;\n\n      const n = Math.round(count);\n\n      if (n < 0) prev({ count: Math.abs(n), animated, onFinished });\n      else next({ count: n, animated, onFinished });\n    },\n    [prev, next, to]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      next,\n      prev,\n      getCurrentIndex,\n      scrollTo,\n    }),\n    [getCurrentIndex, next, prev, scrollTo]\n  );\n\n  return {\n    next,\n    prev,\n    scrollTo,\n    getCurrentIndex,\n    getSharedIndex: () => sharedIndex.current,\n    index,\n  };\n}\n"]}