"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useGlobalState = exports.GlobalStateProvider = exports.GlobalStateContext = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNativeReanimated = require("react-native-reanimated");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const GlobalStateContext = /*#__PURE__*/_react.default.createContext({});

exports.GlobalStateContext = GlobalStateContext;

const GlobalStateProvider = _ref => {
  let {
    children,
    value
  } = _ref;
  const containerSize = (0, _reactNativeReanimated.useSharedValue)({
    width: 0,
    height: 0
  });
  const itemDimensions = (0, _reactNativeReanimated.useSharedValue)({});

  const updateItemDimensions = (index, dimensions) => {
    "worklet";

    itemDimensions.value = { ...itemDimensions.value,
      [index]: dimensions
    };
  };

  const updateContainerSize = dimensions => {
    "worklet";

    containerSize.value = dimensions;
  };

  return /*#__PURE__*/_react.default.createElement(GlobalStateContext.Provider, {
    value: { ...value,
      layout: {
        containerSize,
        itemDimensions,
        updateItemDimensions,
        updateContainerSize
      }
    }
  }, children);
};

exports.GlobalStateProvider = GlobalStateProvider;

const useGlobalState = () => {
  const context = _react.default.useContext(GlobalStateContext);

  if (!context) {
    throw new Error("useGlobalState must be used within a GlobalStateProvider");
  }

  return context;
};

exports.useGlobalState = useGlobalState;
//# sourceMappingURL=index.js.map