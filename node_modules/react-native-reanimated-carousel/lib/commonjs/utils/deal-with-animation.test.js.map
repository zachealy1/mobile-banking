{"version":3,"sources":["deal-with-animation.test.ts"],"names":["jest","mock","withSpring","fn","value","_config","callback","withTiming","describe","beforeEach","clearAllMocks","it","springConfig","damping","stiffness","animation","type","config","result","expect","toHaveBeenCalledWith","any","Function","toBe","timingConfig","duration","mass","objectContaining"],"mappings":"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","sourcesContent":["import { withSpring, withTiming } from \"react-native-reanimated\";\n\nimport { dealWithAnimation } from \"./deal-with-animation\";\n\n// Mock Reanimated\njest.mock(\"react-native-reanimated\", () => ({\n  withSpring: jest.fn((value, _config, callback) => {\n    callback?.(true);\n    return value;\n  }),\n  withTiming: jest.fn((value, _config, callback) => {\n    callback?.(true);\n    return value;\n  }),\n}));\n\ndescribe(\"dealWithAnimation\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it(\"should handle spring animation\", () => {\n    const callback = jest.fn();\n    const springConfig = {\n      damping: 20,\n      stiffness: 90,\n    };\n\n    const animation = dealWithAnimation({\n      type: \"spring\",\n      config: springConfig,\n    });\n\n    const result = animation(100, callback);\n\n    expect(withSpring).toHaveBeenCalledWith(100, springConfig, expect.any(Function));\n    expect(callback).toHaveBeenCalledWith(true);\n    expect(result).toBe(100);\n  });\n\n  it(\"should handle timing animation\", () => {\n    const callback = jest.fn();\n    const timingConfig = {\n      duration: 300,\n    };\n\n    const animation = dealWithAnimation({\n      type: \"timing\",\n      config: timingConfig,\n    });\n\n    const result = animation(100, callback);\n\n    expect(withTiming).toHaveBeenCalledWith(100, timingConfig, expect.any(Function));\n    expect(callback).toHaveBeenCalledWith(true);\n    expect(result).toBe(100);\n  });\n\n  it(\"should pass animation config correctly\", () => {\n    const springConfig = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n    };\n\n    const animation = dealWithAnimation({\n      type: \"spring\",\n      config: springConfig,\n    });\n\n    animation(100, jest.fn());\n\n    expect(withSpring).toHaveBeenCalledWith(\n      100,\n      expect.objectContaining(springConfig),\n      expect.any(Function)\n    );\n  });\n\n  it(\"should handle animation completion\", () => {\n    const callback = jest.fn();\n    const animation = dealWithAnimation({\n      type: \"timing\",\n      config: { duration: 300 },\n    });\n\n    animation(100, callback);\n\n    expect(callback).toHaveBeenCalledWith(true);\n  });\n});\n"]}