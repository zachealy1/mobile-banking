{"version":3,"sources":["Carousel.test.tsx"],"names":["React","Gesture","State","Animated","useDerivedValue","useSharedValue","act","render","waitFor","fireGestureHandler","getByGestureTestId","Carousel","jest","setTimeout","mockPan","fn","realPan","Pan","gestureTestId","spyOn","mockImplementation","withTestId","describe","slideWidth","slideHeight","slideCount","beforeEach","mockClear","createMockData","length","Array","from","_","i","createDefaultProps","progressAnimVal","customProps","baseProps","width","height","data","defaultIndex","testID","onProgressChange","createCarousel","progress","Wrapper","forwardRef","ref","current","defaultRenderItem","item","index","flex","renderItem","defaultProps","value","swipeToLeftOnce","options","itemWidth","velocityX","state","BEGAN","translationX","ACTIVE","END","verifyInitialRender","getByTestId","expect","toBeTruthy","timeout","it","toBe","onSnapToItem","not","toHaveBeenCalled","toHaveBeenCalledWith","WrapperWithCustomProps","defaultScrollOffsetValue","refSetupCallback","getAllByTestId","_pan","pan","toBeNull","startedProgress","onScrollStart","endedProgress","onScrollEnd","offsetProgressVal","absoluteProgressVal","offsetProgress","absoluteProgress","containerWidth","containerHeight","nextSlide","testId","baseOptions","vertical","style","next","props","onLayout","nativeEvent","layout","Promise","resolve"],"mappings":"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","sourcesContent":["import type { FC } from \"react\";\nimport React from \"react\";\nimport type { PanGesture } from \"react-native-gesture-handler\";\nimport { Gesture, State } from \"react-native-gesture-handler\";\nimport Animated, { useDerivedValue, useSharedValue } from \"react-native-reanimated\";\nimport type { ReactTestInstance } from \"react-test-renderer\";\n\nimport { act, render, waitFor } from \"@testing-library/react-native\";\nimport { fireGestureHandler, getByGestureTestId } from \"react-native-gesture-handler/jest-utils\";\n\nimport Carousel from \"./Carousel\";\n\nimport type { TCarouselProps } from \"../types\";\n\njest.setTimeout(1000 * 12);\n\nconst mockPan = jest.fn();\nconst realPan = Gesture.Pan();\nconst gestureTestId = \"rnrc-gesture-handler\";\n\njest.spyOn(Gesture, \"Pan\").mockImplementation(() => {\n  mockPan();\n  return realPan.withTestId(gestureTestId);\n});\n\ndescribe(\"Test the real swipe behavior of Carousel to ensure it's working as expected\", () => {\n  const slideWidth = 300;\n  const slideHeight = 200;\n  const slideCount = 4;\n\n  beforeEach(() => {\n    mockPan.mockClear();\n  });\n\n  // Helper function to create mock data\n  const createMockData = (length: number = slideCount) =>\n    Array.from({ length }, (_, i) => `Item ${i + 1}`);\n\n  // Helper function to create default props with correct typing\n  const createDefaultProps = (\n    progressAnimVal: Animated.SharedValue<number>,\n    customProps: Partial<TCarouselProps<string>> = {}\n  ) => {\n    const baseProps: Partial<TCarouselProps<string>> = {\n      width: slideWidth,\n      height: slideHeight,\n      data: createMockData(),\n      defaultIndex: 0,\n      testID: \"carousel-swipe-container\",\n      onProgressChange: progressAnimVal,\n    };\n\n    return {\n      ...baseProps,\n      ...customProps,\n    } as TCarouselProps<string>;\n  };\n\n  // Helper function to create test wrapper\n  const createCarousel = (progress: { current: number }) => {\n    const Wrapper: FC<Partial<TCarouselProps<string>>> = React.forwardRef((customProps, ref) => {\n      const progressAnimVal = useSharedValue(progress.current);\n      const defaultRenderItem = ({\n        item,\n        index,\n      }: {\n        item: string;\n        index: number;\n      }) => (\n        <Animated.View\n          testID={`carousel-item-${index}`}\n          style={{ width: slideWidth, height: slideHeight, flex: 1 }}\n        >\n          {item}\n        </Animated.View>\n      );\n      const { renderItem = defaultRenderItem, ...defaultProps } = createDefaultProps(\n        progressAnimVal,\n        customProps\n      );\n\n      useDerivedValue(() => {\n        progress.current = progressAnimVal.value;\n      }, [progressAnimVal]);\n\n      return <Carousel {...defaultProps} renderItem={renderItem} ref={ref} />;\n    });\n\n    return Wrapper;\n  };\n\n  // Helper function to simulate swipe\n  const swipeToLeftOnce = (\n    options: {\n      itemWidth?: number;\n      velocityX?: number;\n    } = {}\n  ) => {\n    const { itemWidth = slideWidth, velocityX = -slideWidth } = options;\n    fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n      { state: State.BEGAN, translationX: 0, velocityX },\n      { state: State.ACTIVE, translationX: -itemWidth * 0.25, velocityX },\n      { state: State.ACTIVE, translationX: -itemWidth * 0.5, velocityX },\n      { state: State.ACTIVE, translationX: -itemWidth * 0.75, velocityX },\n      { state: State.END, translationX: -itemWidth, velocityX },\n    ]);\n  };\n\n  // Helper function to verify initial render\n  const verifyInitialRender = async (\n    getByTestId: (testID: string | RegExp) => ReactTestInstance\n  ) => {\n    await waitFor(\n      () => {\n        const item = getByTestId(\"carousel-item-0\");\n        expect(item).toBeTruthy();\n      },\n      { timeout: 1000 * 3 }\n    );\n  };\n\n  it(\"`data` prop: should render correctly\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper data={createMockData(6)} />);\n    await verifyInitialRender(getByTestId);\n\n    expect(getByTestId(\"carousel-item-0\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-1\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-2\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-3\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-4\")).toBeTruthy();\n    expect(getByTestId(\"carousel-item-5\")).toBeTruthy();\n  });\n\n  it(\"`renderItem` prop: should render items correctly\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(\n      <Wrapper\n        renderItem={({ item, index }) => (\n          <Animated.Text testID={`item-${index}`}>{item}</Animated.Text>\n        )}\n      />\n    );\n\n    await waitFor(() => expect(getByTestId(\"item-0\")).toBeTruthy());\n  });\n\n  it(\"should swipe to the left\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper />);\n    await verifyInitialRender(getByTestId);\n\n    // Test swipe sequence\n    for (let i = 1; i <= slideCount; i++) {\n      swipeToLeftOnce();\n      await waitFor(() => expect(progress.current).toBe(i % slideCount));\n    }\n  });\n\n  it(\"`loop` prop: should swipe back to the first item when loop is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    {\n      const { getByTestId } = render(<Wrapper loop />);\n      await verifyInitialRender(getByTestId);\n\n      // Test swipe sequence\n      for (let i = 1; i <= slideCount; i++) {\n        swipeToLeftOnce();\n        await waitFor(() => expect(progress.current).toBe(i % slideCount));\n      }\n    }\n\n    {\n      const { getByTestId } = render(<Wrapper loop={false} />);\n      await verifyInitialRender(getByTestId);\n\n      fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n        { state: State.BEGAN, translationX: 0 },\n        { state: State.ACTIVE, translationX: slideWidth * 0.25 },\n        { state: State.END, translationX: slideWidth * 0.5 },\n      ]);\n\n      // Because the loop is false, so the the carousel will swipe back to the first item\n      await waitFor(() => expect(progress.current).toBe(0));\n    }\n  });\n\n  it(\"`onSnapToItem` prop: should call the onSnapToItem callback\", async () => {\n    const progress = { current: 0 };\n    const onSnapToItem = jest.fn();\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper onSnapToItem={onSnapToItem} />);\n    await verifyInitialRender(getByTestId);\n    expect(onSnapToItem).not.toHaveBeenCalled();\n\n    swipeToLeftOnce();\n    await waitFor(() => expect(onSnapToItem).toHaveBeenCalledWith(1));\n\n    swipeToLeftOnce();\n    await waitFor(() => expect(onSnapToItem).toHaveBeenCalledWith(2));\n\n    swipeToLeftOnce();\n    await waitFor(() => expect(onSnapToItem).toHaveBeenCalledWith(3));\n  });\n\n  it(\"`autoPlay` prop: should swipe automatically when autoPlay is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper autoPlay autoPlayInterval={300} />);\n    await verifyInitialRender(getByTestId);\n\n    await waitFor(() => expect(progress.current).toBe(1));\n    await waitFor(() => expect(progress.current).toBe(2));\n    await waitFor(() => expect(progress.current).toBe(3));\n    await waitFor(() => expect(progress.current).toBe(0));\n  });\n\n  it(\"`autoPlayReverse` prop: should swipe automatically in reverse when autoPlayReverse is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper autoPlay autoPlayReverse />);\n    await verifyInitialRender(getByTestId);\n\n    await waitFor(() => expect(progress.current).toBe(3));\n    await waitFor(() => expect(progress.current).toBe(2));\n    await waitFor(() => expect(progress.current).toBe(1));\n    await waitFor(() => expect(progress.current).toBe(0));\n  });\n\n  it(\"`defaultIndex` prop: should render the correct item with the defaultIndex props\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper defaultIndex={2} />);\n    await verifyInitialRender(getByTestId);\n\n    await waitFor(() => expect(progress.current).toBe(2));\n  });\n\n  it(\"`defaultScrollOffsetValue` prop: should render the correct progress value with the defaultScrollOffsetValue props\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    const WrapperWithCustomProps = () => {\n      const defaultScrollOffsetValue = useSharedValue(-slideWidth);\n\n      return <Wrapper defaultScrollOffsetValue={defaultScrollOffsetValue} />;\n    };\n\n    render(<WrapperWithCustomProps />);\n\n    await waitFor(() => expect(progress.current).toBe(1));\n  });\n\n  it(\"`ref` prop: should handle the ref props\", async () => {\n    const Wrapper = createCarousel({ current: 0 });\n    const fn = jest.fn();\n    const WrapperWithCustomProps: FC<{\n      refSetupCallback: (ref: boolean) => void;\n    }> = ({ refSetupCallback }) => {\n      return (\n        <Wrapper\n          ref={(ref) => {\n            refSetupCallback(!!ref);\n          }}\n        />\n      );\n    };\n\n    render(<WrapperWithCustomProps refSetupCallback={fn} />);\n\n    await waitFor(() => expect(fn).toHaveBeenCalledWith(true));\n  });\n\n  it(\"`autoFillData` prop: should auto fill data array to allow loop playback when the loop props is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    {\n      const { getAllByTestId } = render(<Wrapper autoFillData data={createMockData(1)} />);\n      await waitFor(() => {\n        expect(getAllByTestId(\"carousel-item-0\").length).toBe(3);\n      });\n    }\n\n    {\n      const { getAllByTestId } = render(<Wrapper autoFillData={false} data={createMockData(1)} />);\n      await waitFor(() => {\n        expect(getAllByTestId(\"carousel-item-0\").length).toBe(1);\n      });\n    }\n  });\n\n  it(\"`pagingEnabled` prop: should swipe to the next item when pagingEnabled is true\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    {\n      const { getByTestId } = render(<Wrapper pagingEnabled={false} />);\n      await verifyInitialRender(getByTestId);\n\n      fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n        { state: State.BEGAN, translationX: 0, velocityX: -5 },\n        { state: State.ACTIVE, translationX: -slideWidth * 0.15, velocityX: -5 },\n        { state: State.END, translationX: -slideWidth * 0.25, velocityX: -5 },\n      ]);\n\n      await waitFor(() => expect(progress.current).toBe(0));\n    }\n\n    {\n      const { getByTestId } = render(<Wrapper pagingEnabled />);\n      await verifyInitialRender(getByTestId);\n\n      fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n        { state: State.BEGAN, translationX: 0, velocityX: -1000 },\n        { state: State.ACTIVE, translationX: -slideWidth * 0.15, velocityX: -1000 },\n        { state: State.END, translationX: -slideWidth * 0.25, velocityX: -1000 },\n      ]);\n\n      await waitFor(() => expect(progress.current).toBe(1));\n    }\n  });\n\n  it(\"`onConfigurePanGesture` prop: should call the onConfigurePanGesture callback\", async () => {\n    const progress = { current: 0 };\n    const Wrapper = createCarousel(progress);\n    let _pan: PanGesture | null = null;\n    render(\n      <Wrapper\n        onConfigurePanGesture={(pan) => {\n          _pan = pan;\n          return pan;\n        }}\n      />\n    );\n\n    const { getByTestId } = render(<Wrapper pagingEnabled={false} />);\n    await verifyInitialRender(getByTestId);\n    expect(_pan).not.toBeNull();\n  });\n\n  it(\"`onScrollStart` prop: should call the onScrollStart callback\", async () => {\n    const progress = { current: 0 };\n    let startedProgress: number | undefined;\n    const onScrollStart = () => {\n      if (typeof startedProgress === \"number\") return;\n\n      startedProgress = progress.current;\n    };\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper onScrollStart={onScrollStart} />);\n    await verifyInitialRender(getByTestId);\n\n    fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n      { state: State.BEGAN, translationX: 0, velocityX: 1000 },\n      { state: State.ACTIVE, translationX: slideWidth / 2, velocityX: 1000 },\n      { state: State.END, translationX: slideWidth, velocityX: 1000 },\n    ]);\n\n    await waitFor(() => {\n      expect(startedProgress).toBe(0);\n    });\n  });\n\n  it(\"`onScrollEnd` prop: should call the onScrollEnd callback\", async () => {\n    const progress = { current: 0 };\n    let endedProgress: number | undefined;\n    const onScrollEnd = jest.fn(() => {\n      if (typeof endedProgress === \"number\") return;\n\n      endedProgress = progress.current;\n    });\n    const Wrapper = createCarousel(progress);\n    const { getByTestId } = render(<Wrapper onScrollEnd={onScrollEnd} />);\n    await verifyInitialRender(getByTestId);\n\n    fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n      { state: State.BEGAN, translationX: 0, velocityX: 1000 },\n      { state: State.ACTIVE, translationX: slideWidth / 2, velocityX: 1000 },\n      { state: State.END, translationX: slideWidth, velocityX: 1000 },\n    ]);\n\n    await waitFor(() => {\n      expect(endedProgress).toBe(3);\n      expect(onScrollEnd).toHaveBeenCalledWith(3);\n    });\n  });\n\n  it(\"`onProgressChange` prop: should call the onProgressChange callback\", async () => {\n    const offsetProgressVal = { current: 0 };\n    const absoluteProgressVal = { current: 0 };\n    const onProgressChange = jest.fn((offsetProgress, absoluteProgress) => {\n      offsetProgressVal.current = offsetProgress;\n      absoluteProgressVal.current = absoluteProgress;\n    });\n    const Wrapper = createCarousel(offsetProgressVal);\n    const { getByTestId } = render(\n      <Wrapper onProgressChange={onProgressChange} defaultIndex={0} />\n    );\n    await verifyInitialRender(getByTestId);\n\n    await waitFor(() => {\n      expect(offsetProgressVal.current).toBe(0);\n      expect(absoluteProgressVal.current).toBe(0);\n    });\n\n    fireGestureHandler<PanGesture>(getByGestureTestId(gestureTestId), [\n      { state: State.BEGAN, translationX: 0, velocityX: -1000 },\n      { state: State.ACTIVE, translationX: -slideWidth / 2, velocityX: -1000 },\n      { state: State.END, translationX: -slideWidth, velocityX: -1000 },\n    ]);\n\n    await waitFor(() => {\n      expect(offsetProgressVal.current).toBe(-slideWidth);\n      expect(absoluteProgressVal.current).toBe(1);\n    });\n  });\n\n  it(\"`fixedDirection` prop: should swipe to the correct direction when fixedDirection is positive\", async () => {\n    {\n      const progress = { current: 0 };\n      const Wrapper = createCarousel(progress);\n      const { getByTestId } = render(<Wrapper fixedDirection=\"positive\" />);\n      await verifyInitialRender(getByTestId);\n\n      swipeToLeftOnce({ velocityX: slideWidth });\n      await waitFor(() => {\n        expect(progress.current).toBe(3);\n      });\n    }\n\n    {\n      const progress = { current: 0 };\n      const Wrapper = createCarousel(progress);\n      const { getByTestId } = render(<Wrapper fixedDirection=\"negative\" />);\n      await verifyInitialRender(getByTestId);\n\n      swipeToLeftOnce({ velocityX: -slideWidth });\n      await waitFor(() => expect(progress.current).toBe(1));\n    }\n  });\n\n  it(\"`overscrollEnabled` prop: should respect overscrollEnabled=false and prevent scrolling beyond bounds\", async () => {\n    const containerWidth = slideWidth;\n    const containerHeight = containerWidth / 2;\n    const itemWidth = containerWidth / 4;\n\n    let nextSlide: (() => void) | undefined;\n    const testId = \"CarouselAnimatedView\";\n    const progress = { current: 0 };\n    const Carousel = createCarousel(progress);\n    const baseOptions = {\n      vertical: false,\n      width: itemWidth,\n      height: containerHeight,\n      style: {\n        width: containerWidth,\n      },\n      testID: testId,\n    };\n\n    const { getByTestId } = render(\n      <Carousel\n        ref={(ref) => {\n          if (ref) {\n            nextSlide = ref.next;\n          }\n        }}\n        {...baseOptions}\n        loop={false}\n        overscrollEnabled={false}\n        data={createMockData(6)}\n        pagingEnabled={false}\n      />\n    );\n\n    await act(() => {\n      getByTestId(testId).props.onLayout({\n        nativeEvent: {\n          layout: {\n            width: containerWidth,\n            height: containerHeight,\n          },\n        },\n      });\n    });\n\n    await verifyInitialRender(getByTestId);\n\n    await new Promise((resolve) => setTimeout(resolve, 3000));\n\n    // The test logic is that the first screen has four elements\n    await waitFor(() => {\n      expect(progress.current).toBe(0);\n    });\n\n    // After swiping left twice, the last element is close to the right side of the container\n    nextSlide?.();\n    await waitFor(() => {\n      expect(progress.current).toBe(1);\n    });\n\n    nextSlide?.();\n    await waitFor(() => {\n      expect(progress.current).toBe(2);\n    });\n\n    // At this point, swiping left again should stay on the last element, meaning this swipe is invalid\n    nextSlide?.();\n    await waitFor(() => {\n      expect(progress.current).toBe(2);\n    });\n  });\n});\n"]}