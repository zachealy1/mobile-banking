{"version":3,"sources":["useInitProps.test.tsx"],"names":["React","Text","renderHook","useInitProps","describe","defaultData","defaultProps","data","width","height","renderItem","item","_item","it","result","expect","current","toEqual","objectContaining","defaultIndex","loop","autoPlayInterval","scrollAnimationDuration","enabled","autoFillData","pagingEnabled","snapEnabled","overscrollEnabled","rawData","dataLength","rawDataLength","customProps","stackProps","mode","modeConfig","showLength","toBeDefined","toBe","props","enableSnap"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,cAArB;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AAIAC,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC7B,QAAMC,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAApB;AACA,QAAMC,YAAoC,GAAG;AAC3CC,IAAAA,IAAI,EAAEF,WADqC;AAE3CG,IAAAA,KAAK,EAAE,GAFoC;AAG3CC,IAAAA,MAAM,EAAE,GAHmC;AAI3CC,IAAAA,UAAU,EAAE;AAAA,UAAC;AAAEC,QAAAA,IAAI,EAAEC;AAAR,OAAD;AAAA,0BAAqB,oBAAC,IAAD,QAAM,MAAN,CAArB;AAAA;AAJ+B,GAA7C;AAOAC,EAAAA,EAAE,CAAC,uCAAD,EAA0C,MAAM;AAChD,UAAM;AAAEC,MAAAA;AAAF,QAAaZ,UAAU,CAAC,MAAMC,YAAY,CAACG,YAAD,CAAnB,CAA7B;AAEAS,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CACEF,MAAM,CAACG,gBAAP,CAAwB;AACtBC,MAAAA,YAAY,EAAE,CADQ;AAEtBC,MAAAA,IAAI,EAAE,IAFgB;AAGtBC,MAAAA,gBAAgB,EAAE,IAHI;AAItBC,MAAAA,uBAAuB,EAAE,GAJH;AAKtBd,MAAAA,KAAK,EAAE,GALe;AAMtBC,MAAAA,MAAM,EAAE,GANc;AAOtBc,MAAAA,OAAO,EAAE,IAPa;AAQtBC,MAAAA,YAAY,EAAE,IARQ;AAStBC,MAAAA,aAAa,EAAE,IATO;AAUtBC,MAAAA,WAAW,EAAE,IAVS;AAWtBC,MAAAA,iBAAiB,EAAE,IAXG;AAYtBpB,MAAAA,IAAI,EAAEF,WAZgB;AAatBuB,MAAAA,OAAO,EAAEvB,WAba;AActBwB,MAAAA,UAAU,EAAE,CAdU;AAetBC,MAAAA,aAAa,EAAE;AAfO,KAAxB,CADF;AAmBD,GAtBC,CAAF;AAwBAjB,EAAAA,EAAE,CAAC,6BAAD,EAAgC,MAAM;AACtC,UAAMkB,WAAmC,GAAG,EAC1C,GAAGzB,YADuC;AAE1Ca,MAAAA,YAAY,EAAE,CAF4B;AAG1CC,MAAAA,IAAI,EAAE,KAHoC;AAI1CC,MAAAA,gBAAgB,EAAE,IAJwB;AAK1CC,MAAAA,uBAAuB,EAAE,GALiB;AAM1CC,MAAAA,OAAO,EAAE,KANiC;AAO1CC,MAAAA,YAAY,EAAE,KAP4B;AAQ1CC,MAAAA,aAAa,EAAE,KAR2B;AAS1CC,MAAAA,WAAW,EAAE,KAT6B;AAU1CC,MAAAA,iBAAiB,EAAE;AAVuB,KAA5C;AAaA,UAAM;AAAEb,MAAAA;AAAF,QAAaZ,UAAU,CAAC,MAAMC,YAAY,CAAC4B,WAAD,CAAnB,CAA7B;AAEAhB,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CACEF,MAAM,CAACG,gBAAP,CAAwB,EACtB,GAAGa,WADmB;AAEtBxB,MAAAA,IAAI,EAAEF,WAFgB;AAGtBuB,MAAAA,OAAO,EAAEvB,WAHa;AAItBwB,MAAAA,UAAU,EAAE,CAJU;AAKtBC,MAAAA,aAAa,EAAE;AALO,KAAxB,CADF;AASD,GAzBC,CAAF;AA0BAjB,EAAAA,EAAE,CAAC,wCAAD,EAA2C,MAAM;AACjD,UAAMmB,UAAkC,GAAG,EACzC,GAAG1B,YADsC;AAEzC2B,MAAAA,IAAI,EAAE,kBAFmC;AAGzCC,MAAAA,UAAU,EAAE;AACVC,QAAAA,UAAU,EAAE;AADF;AAH6B,KAA3C;AAQA,UAAM;AAAErB,MAAAA;AAAF,QAAaZ,UAAU,CAAC,MAAMC,YAAY,CAAC6B,UAAD,CAAnB,CAA7B;AAEAjB,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAP,CAAekB,UAAhB,CAAN,CAAkCE,WAAlC;AACA,QAAItB,MAAM,CAACE,OAAP,CAAekB,UAAf,IAA6B,gBAAgBpB,MAAM,CAACE,OAAP,CAAekB,UAAhE,EACEnB,MAAM,CAACD,MAAM,CAACE,OAAP,CAAekB,UAAf,CAA0BC,UAA3B,CAAN,CAA6CE,IAA7C,CAAkD,CAAlD,EAb+C,CAaO;AACzD,GAdC,CAAF;AAgBAxB,EAAAA,EAAE,CAAC,gCAAD,EAAmC,MAAM;AACzC,UAAMyB,KAA6B,GAAG,EACpC,GAAGhC,YADiC;AAEpCC,MAAAA,IAAI,EAAE;AAF8B,KAAtC;AAKA,UAAM;AAAEO,MAAAA;AAAF,QAAaZ,UAAU,CAAC,MAAMC,YAAY,CAACmC,KAAD,CAAnB,CAA7B;AAEAvB,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAP,CAAea,UAAhB,CAAN,CAAkCQ,IAAlC,CAAuC,CAAvC;AACAtB,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAP,CAAec,aAAhB,CAAN,CAAqCO,IAArC,CAA0C,CAA1C;AACD,GAVC,CAAF;AAYAxB,EAAAA,EAAE,CAAC,sCAAD,EAAyC,MAAM;AAC/C,UAAMyB,KAA6B,GAAG,EACpC,GAAGhC,YADiC;AAEpCE,MAAAA,KAAK,EAAE,KAF6B;AAGpCC,MAAAA,MAAM,EAAE;AAH4B,KAAtC;AAMA,UAAM;AAAEK,MAAAA;AAAF,QAAaZ,UAAU,CAAC,MAAMC,YAAY,CAACmC,KAAD,CAAnB,CAA7B;AAEAvB,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAP,CAAeR,KAAhB,CAAN,CAA6B6B,IAA7B,CAAkC,GAAlC;AACAtB,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAP,CAAeP,MAAhB,CAAN,CAA8B4B,IAA9B,CAAmC,GAAnC;AACD,GAXC,CAAF;AAaAxB,EAAAA,EAAE,CAAC,mCAAD,EAAsC,MAAM;AAC5C,UAAMyB,KAA6B,GAAG,EACpC,GAAGhC,YADiC;AAEpCiC,MAAAA,UAAU,EAAE;AAFwB,KAAtC;AAKA,UAAM;AAAEzB,MAAAA;AAAF,QAAaZ,UAAU,CAAC,MAAMC,YAAY,CAACmC,KAAD,CAAnB,CAA7B;AAEAvB,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAP,CAAeU,WAAhB,CAAN,CAAmCW,IAAnC,CAAwC,KAAxC;AACD,GATC,CAAF;AAUAxB,EAAAA,EAAE,CAAC,mCAAD,EAAsC,MAAM;AAC5C,UAAMyB,KAA6B,GAAG,EACpC,GAAGhC,YADiC;AAEpC2B,MAAAA,IAAI,EAAE,gBAF8B;AAGpCC,MAAAA,UAAU,EAAE;AACVC,QAAAA,UAAU,EAAE;AADF;AAHwB,KAAtC;AAQA,UAAM;AAAErB,MAAAA;AAAF,QAAaZ,UAAU,CAAC,MAAMC,YAAY,CAACmC,KAAD,CAAnB,CAA7B;AACAvB,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAP,CAAekB,UAAhB,CAAN,CAAkCE,WAAlC;AACA,QAAItB,MAAM,CAACE,OAAP,CAAekB,UAAf,IAA6B,gBAAgBpB,MAAM,CAACE,OAAP,CAAekB,UAAhE,EACEnB,MAAM,CAACD,MAAM,CAACE,OAAP,CAAekB,UAAf,CAA0BC,UAA3B,CAAN,CAA6CE,IAA7C,CAAkD,CAAlD,EAZ0C,CAYY;AACzD,GAbC,CAAF;AAcD,CA5HO,CAAR","sourcesContent":["import React from \"react\";\nimport { Text } from \"react-native\";\n\nimport { renderHook } from \"@testing-library/react-hooks\";\n\nimport { useInitProps } from \"./useInitProps\";\n\nimport type { TCarouselProps } from \"../types\";\n\ndescribe(\"useInitProps\", () => {\n  const defaultData = [1, 2, 3, 4];\n  const defaultProps: TCarouselProps<number> = {\n    data: defaultData,\n    width: 300,\n    height: 200,\n    renderItem: ({ item: _item }) => <Text>Item</Text>,\n  };\n\n  it(\"should initialize with default values\", () => {\n    const { result } = renderHook(() => useInitProps(defaultProps));\n\n    expect(result.current).toEqual(\n      expect.objectContaining({\n        defaultIndex: 0,\n        loop: true,\n        autoPlayInterval: 1000,\n        scrollAnimationDuration: 500,\n        width: 300,\n        height: 200,\n        enabled: true,\n        autoFillData: true,\n        pagingEnabled: true,\n        snapEnabled: true,\n        overscrollEnabled: true,\n        data: defaultData,\n        rawData: defaultData,\n        dataLength: 4,\n        rawDataLength: 4,\n      })\n    );\n  });\n\n  it(\"should handle custom values\", () => {\n    const customProps: TCarouselProps<number> = {\n      ...defaultProps,\n      defaultIndex: 2,\n      loop: false,\n      autoPlayInterval: 2000,\n      scrollAnimationDuration: 300,\n      enabled: false,\n      autoFillData: false,\n      pagingEnabled: false,\n      snapEnabled: false,\n      overscrollEnabled: false,\n    };\n\n    const { result } = renderHook(() => useInitProps(customProps));\n\n    expect(result.current).toEqual(\n      expect.objectContaining({\n        ...customProps,\n        data: defaultData,\n        rawData: defaultData,\n        dataLength: 4,\n        rawDataLength: 4,\n      })\n    );\n  });\n  it(\"should handle stack mode configuration\", () => {\n    const stackProps: TCarouselProps<number> = {\n      ...defaultProps,\n      mode: \"horizontal-stack\",\n      modeConfig: {\n        showLength: 3,\n      },\n    };\n\n    const { result } = renderHook(() => useInitProps(stackProps));\n\n    expect(result.current.modeConfig).toBeDefined();\n    if (result.current.modeConfig && \"showLength\" in result.current.modeConfig)\n      expect(result.current.modeConfig.showLength).toBe(3); // dataLength - 1\n  });\n\n  it(\"should handle empty data array\", () => {\n    const props: TCarouselProps<number> = {\n      ...defaultProps,\n      data: [],\n    };\n\n    const { result } = renderHook(() => useInitProps(props));\n\n    expect(result.current.dataLength).toBe(0);\n    expect(result.current.rawDataLength).toBe(0);\n  });\n\n  it(\"should round width and height values\", () => {\n    const props: TCarouselProps<number> = {\n      ...defaultProps,\n      width: 300.6,\n      height: 200.4,\n    };\n\n    const { result } = renderHook(() => useInitProps(props));\n\n    expect(result.current.width).toBe(301);\n    expect(result.current.height).toBe(200);\n  });\n\n  it(\"should handle enableSnap property\", () => {\n    const props: TCarouselProps<number> = {\n      ...defaultProps,\n      enableSnap: false,\n    };\n\n    const { result } = renderHook(() => useInitProps(props));\n\n    expect(result.current.snapEnabled).toBe(false);\n  });\n  it(\"should handle vertical-stack mode\", () => {\n    const props: TCarouselProps<number> = {\n      ...defaultProps,\n      mode: \"vertical-stack\",\n      modeConfig: {\n        showLength: 3,\n      },\n    };\n\n    const { result } = renderHook(() => useInitProps(props));\n    expect(result.current.modeConfig).toBeDefined();\n    if (result.current.modeConfig && \"showLength\" in result.current.modeConfig)\n      expect(result.current.modeConfig.showLength).toBe(3); // dataLength - 1\n  });\n});\n"]}