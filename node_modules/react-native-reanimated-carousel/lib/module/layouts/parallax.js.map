{"version":3,"sources":["parallax.ts"],"names":["Extrapolation","interpolate","parallaxLayout","baseConfig","modeConfig","size","vertical","parallaxScrollingOffset","parallaxScrollingScale","parallaxAdjacentItemScale","value","translate","zIndex","Math","round","CLAMP","scale","transform","translateY","translateX"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,QAA2C,yBAA3C;AAmCA,OAAO,SAASC,cAAT,CAAwBC,UAAxB,EAAiF;AAAA,MAAhCC,UAAgC,uEAAJ,EAAI;AACtF,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBH,UAA3B;AACA,QAAM;AACJI,IAAAA,uBAAuB,GAAG,GADtB;AAEJC,IAAAA,sBAAsB,GAAG,GAFrB;AAGJC,IAAAA,yBAAyB,GAAGD,sBAAsB,IAAI;AAHlD,MAIFJ,UAJJ;AAMA,SAAQM,KAAD,IAAmB;AACxB;;AACA,UAAMC,SAAS,GAAGV,WAAW,CAC3BS,KAD2B,EAE3B,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,CAF2B,EAG3B,CAAC,CAACL,IAAD,GAAQE,uBAAT,EAAkC,CAAlC,EAAqCF,IAAI,GAAGE,uBAA5C,CAH2B,CAA7B;AAMA,UAAMK,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWb,WAAW,CAACS,KAAD,EAAQ,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,CAAR,EAAoB,CAAC,CAAD,EAAIL,IAAJ,EAAU,CAAV,CAApB,EAAkCL,aAAa,CAACe,KAAhD,CAAtB,CAAf;AAEA,UAAMC,KAAK,GAAGf,WAAW,CACvBS,KADuB,EAEvB,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,CAFuB,EAGvB,CAACD,yBAAD,EAA4BD,sBAA5B,EAAoDC,yBAApD,CAHuB,EAIvBT,aAAa,CAACe,KAJS,CAAzB;AAOA,WAAO;AACLE,MAAAA,SAAS,EAAE,CACTX,QAAQ,GACJ;AACEY,QAAAA,UAAU,EAAEP;AADd,OADI,GAIJ;AACEQ,QAAAA,UAAU,EAAER;AADd,OALK,EAQT;AACEK,QAAAA;AADF,OARS,CADN;AAaLJ,MAAAA;AAbK,KAAP;AAeD,GAhCD;AAiCD","sourcesContent":["import { Extrapolation, interpolate } from \"react-native-reanimated\";\n\nimport type { IComputedDirectionTypes } from \"../types\";\n\ninterface TBaseConfig {\n  size: number;\n  vertical: boolean;\n}\n\nexport interface ILayoutConfig {\n  /**\n   * control prev/next item offset.\n   * @default 100\n   */\n  parallaxScrollingOffset?: number;\n  /**\n   * control prev/current/next item offset.\n   * @default 0.8\n   */\n  parallaxScrollingScale?: number;\n  /**\n   * control prev/next item offset.\n   * @default Math.pow(parallaxScrollingScale, 2)\n   */\n  parallaxAdjacentItemScale?: number;\n}\n\nexport type TParallaxModeProps = IComputedDirectionTypes<{\n  /**\n   * Carousel Animated transitions.\n   */\n  mode?: \"parallax\";\n  modeConfig?: ILayoutConfig;\n}>;\n\nexport function parallaxLayout(baseConfig: TBaseConfig, modeConfig: ILayoutConfig = {}) {\n  const { size, vertical } = baseConfig;\n  const {\n    parallaxScrollingOffset = 100,\n    parallaxScrollingScale = 0.8,\n    parallaxAdjacentItemScale = parallaxScrollingScale ** 2,\n  } = modeConfig;\n\n  return (value: number) => {\n    \"worklet\";\n    const translate = interpolate(\n      value,\n      [-1, 0, 1],\n      [-size + parallaxScrollingOffset, 0, size - parallaxScrollingOffset]\n    );\n\n    const zIndex = Math.round(interpolate(value, [-1, 0, 1], [0, size, 0], Extrapolation.CLAMP));\n\n    const scale = interpolate(\n      value,\n      [-1, 0, 1],\n      [parallaxAdjacentItemScale, parallaxScrollingScale, parallaxAdjacentItemScale],\n      Extrapolation.CLAMP\n    );\n\n    return {\n      transform: [\n        vertical\n          ? {\n              translateY: translate,\n            }\n          : {\n              translateX: translate,\n            },\n        {\n          scale,\n        },\n      ],\n      zIndex,\n    };\n  };\n}\n"]}